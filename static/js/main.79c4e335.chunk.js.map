{"version":3,"sources":["components/FileDetails/FileDetails.tsx","assets/clippy.svg","components/FileHash/FileHash.tsx","components/FileLoader/FileLoader.tsx","components/FilePicker/FilePicker.tsx","components/HashLoader/HashLoader.tsx","components/HashSelector/HashSelector.tsx","assets/success.svg","assets/fail.svg","components/HashVerifier/HashVerifier.tsx","hooks/index.ts","actions/index.ts","components/Shell/Shell.tsx","reducers/index.ts","sagas/saga.ts","sagas/getArrayBuffer.ts","sagas/calculateHash.ts","store/index.ts","assets/github.svg","App.tsx","fonts/source-sans-pro-v11-latin-regular.woff2","fonts/source-sans-pro-v11-latin-regular.woff","index.tsx"],"names":["Wrapper","styled","dl","Key","dt","Value","dd","FileDetails","name","size","div","Label","label","HashWrapper","TextInput","input","Button","button","Image","img","FileHash","hash","htmlFor","type","id","value","readOnly","onClick","copy","src","clippy","alt","Progress","progress","FileLoader","onCancel","max","FilePicker","isDisabled","onSelect","multiple","disabled","onChange","event","files","target","HashLoader","FieldSet","fieldset","Input","radioButtons","HashSelector","hashType","map","checked","VerifyWrapper","HashVerifier","useState","text","setText","isMatch","setMatch","inputText","replace","toLowerCase","success","fail","useSelector","useReduxSelector","SELECT_FILE","FILE_LOAD_PROGRESS","CANCEL_FILE_LOAD","FILE_LOADED","SELECT_HASH_TYPE","HASH_CALCULATED","fileLoadProgress","payload","fileLoaded","arrayBuffer","hashCalculated","isSelectFileAction","action","isFileLoadProgressAction","isCancelFileLoadAction","isFileLoadedAction","isSelectHashTypeAction","isHashCalculatedAction","Shell","state","dispatch","useReduxDispatch","file","isCalculatingHash","Boolean","selectFile","selectHashType","initialState","cancelFileLoad","processFile","processHashType","call","getArrayBuffer","calculateHash","saga","takeEvery","createFileReadChannel","eventChannel","emitter","reader","FileReader","onload","result","END","onprogress","Math","round","loaded","total","onerror","error","readAsArrayBuffer","readyState","abort","fileReadChannel","race","channelOutput","take","put","console","close","getFileHash","a","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","b","toString","slice","join","select","sagaMiddleware","createSagaMiddleware","store","createStore","Actions","applyMiddleware","run","Main","main","Header","header","Section","section","Footer","footer","App","href","github","GlobalStyle","createGlobalStyle","woff2","woff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c4e335.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nimport type { FileName, FileSize } from '../../types'\n\ninterface Props {\n  name: FileName\n  size: FileSize\n}\n\nconst Wrapper = styled.dl`\n  margin-top: 2rem;\n`\n\nconst Key = styled.dt`\n  font-weight: 700;\n`\n\nconst Value = styled.dd`\n  word-break: break-all;\n  margin-bottom: 0.5rem;\n`\n\nexport const FileDetails = ({ name, size }: Props) => (\n  <Wrapper>\n    <Key>Name</Key>\n    <Value>{name}</Value>\n    <Key>Size</Key>\n    <Value>{size} bytes</Value>\n  </Wrapper>\n)\n","export default __webpack_public_path__ + \"static/media/clippy.b0e31af4.svg\";","import copy from 'clipboard-copy'\nimport styled from 'styled-components'\n\nimport type { Hash } from '../../types'\n\nimport clippy from '../../assets/clippy.svg'\n\ninterface Props {\n  hash: Hash\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n`\n\nconst HashWrapper = styled.div`\n  display: flex;\n  height: 2rem;\n`\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0 0.25rem;\n  border: 1px solid #aaa;\n  border-right: 0;\n`\n\nconst Button = styled.button`\n  border: 1px solid #aaa;\n  width: 2rem;\n  background-color: transparent;\n  cursor: pointer;\n`\n\nconst Image = styled.img`\n  max-width: 100%;\n`\n\nexport const FileHash = ({ hash }: Props) => (\n  <Wrapper>\n    <Label htmlFor='hash'>Hash:</Label>\n    <HashWrapper>\n      <TextInput type='text' id='hash' value={hash} readOnly />\n      <Button onClick={() => copy(hash)}>\n        <Image src={clippy} alt='Copy to clipboard' />\n      </Button>\n    </HashWrapper>\n  </Wrapper>\n)\n","import styled from 'styled-components'\n\nimport type { FileLoadProgress } from '../../types'\n\ninterface Props {\n  progress: FileLoadProgress\n  onCancel: () => void\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n`\n\nconst Progress = styled.progress`\n  margin: 0 1rem;\n`\n\nexport const FileLoader = ({ progress, onCancel }: Props) => (\n  <Wrapper>\n    <label htmlFor='file-load-progress'>Loading file:</label>\n    <Progress id='file-load-progress' max='100' value={`${progress}`} />\n    {progress !== 100 && <button onClick={onCancel}>Cancel</button>}\n  </Wrapper>\n)\n","import styled from 'styled-components'\n\ninterface Props {\n  isDisabled: boolean\n  onSelect: (file: File) => void\n}\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 700;\n  margin-bottom: 1rem;\n`\n\nexport const FilePicker = ({ isDisabled, onSelect }: Props) => (\n  <>\n    <Label htmlFor='file-picker'>Click to pick a file.</Label>\n    <input\n      type='file'\n      id='file-picker'\n      multiple={false}\n      disabled={isDisabled}\n      onChange={(event) => {\n        const { files } = event.target\n\n        if (files) {\n          onSelect(files[0])\n        }\n      }}\n    />\n  </>\n)\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n`\n\nexport const HashLoader = () => <Wrapper>Calculating Hash...</Wrapper>\n","import styled from 'styled-components'\n\nimport type { HashType } from '../../types'\n\ninterface Props {\n  hashType: HashType | null\n  isDisabled: boolean\n  onSelect: (hashType: HashType) => void\n}\n\nconst FieldSet = styled.fieldset`\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n  border: 0;\n`\n\nconst Input = styled.input`\n  margin: 0 1rem;\n`\n\nconst radioButtons: [string, HashType][] = [\n  ['SHA-1', 'sha-1'],\n  ['SHA-256', 'sha-256'],\n  ['SHA-384', 'sha-384'],\n  ['SHA-512', 'sha-512']\n]\n\nexport const HashSelector = ({ hashType, isDisabled, onSelect }: Props) => (\n  <FieldSet disabled={isDisabled}>\n    {radioButtons.map(([label, value]) => (\n      <label key={value}>\n        <Input\n          type='radio'\n          name='hash-type'\n          value={value}\n          checked={value === hashType}\n          onChange={(event) => onSelect(event.target.value as typeof value)}\n        />\n        {label}\n      </label>\n    ))}\n  </FieldSet>\n)\n","export default __webpack_public_path__ + \"static/media/success.f94dc787.svg\";","export default __webpack_public_path__ + \"static/media/fail.47429a71.svg\";","import { useState, ChangeEvent } from 'react'\nimport styled from 'styled-components'\n\nimport type { Hash } from '../../types'\n\nimport success from '../../assets/success.svg'\nimport fail from '../../assets/fail.svg'\n\ninterface Props {\n  hash: Hash\n}\n\ninterface StyleProps {\n  value: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n`\n\nconst VerifyWrapper = styled.div`\n  display: flex;\n  height: 2rem;\n`\n\nconst TextInput = styled.input<StyleProps>`\n  width: 100%;\n  padding: 0 0.25rem;\n  border: 1px solid #aaa;\n  ${({ value }) => value && `border-right: 0;`}\n`\n\nconst Image = styled.img`\n  width: 2rem;\n  border: 1px solid #aaa;\n`\n\nexport const HashVerifier = ({ hash }: Props) => {\n  const [text, setText] = useState<string>('')\n  const [isMatch, setMatch] = useState<boolean>(false)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const inputText = event.target.value\n\n    setText(inputText)\n    setMatch(hash === inputText.replace(/ /g, '').toLowerCase())\n  }\n\n  return (\n    <Wrapper>\n      <Label htmlFor='hash-verify'>Compare with:</Label>\n      <VerifyWrapper>\n        <TextInput\n          type='text'\n          id='hash-verify'\n          value={text}\n          onChange={handleChange}\n        />\n        {text && (\n          <Image\n            src={isMatch ? success : fail}\n            alt={isMatch ? 'Hashes match' : 'Hashes do not match'}\n          />\n        )}\n      </VerifyWrapper>\n    </Wrapper>\n  )\n}\n","import {\n  TypedUseSelectorHook,\n  useSelector as useReduxSelector,\n  useDispatch as useReduxDispatch\n} from 'react-redux'\n\nimport type { State, Dispatch } from '../store'\n\nexport const useSelector: TypedUseSelectorHook<State> = useReduxSelector\nexport const useDispatch = () => useReduxDispatch<Dispatch>()\n","import type { AnyAction } from 'redux'\n\nimport type { FileLoadProgress, HashType, Hash } from '../types'\n\nexport const SELECT_FILE = 'SELECT_FILE'\nexport const FILE_LOAD_PROGRESS = 'FILE_LOAD_PROGRESS'\nexport const CANCEL_FILE_LOAD = 'CANCEL_FILE_LOAD'\nexport const FILE_LOADED = 'FILE_LOADED'\nexport const SELECT_HASH_TYPE = 'SELECT_HASH_TYPE'\nexport const HASH_CALCULATED = 'HASH_CALCULATED'\n\n/* Action Types */\nexport interface SelectFileAction extends AnyAction {\n  type: typeof SELECT_FILE\n  payload: { file: File }\n}\n\nexport interface FileLoadProgressAction extends AnyAction {\n  type: typeof FILE_LOAD_PROGRESS\n  payload: { progress: FileLoadProgress }\n}\n\nexport interface CancelFileLoadAction extends AnyAction {\n  type: typeof CANCEL_FILE_LOAD\n}\n\nexport interface FileLoadedAction extends AnyAction {\n  type: typeof FILE_LOADED\n  payload: { arrayBuffer: ArrayBuffer }\n}\n\nexport interface SelectHashTypeAction extends AnyAction {\n  type: typeof SELECT_HASH_TYPE\n  payload: { hashType: HashType }\n}\n\nexport interface HashCalculatedAction extends AnyAction {\n  type: typeof HASH_CALCULATED\n  payload: { hash: Hash }\n}\n\n/* Action Creators */\nexport const selectFile = (file: File): SelectFileAction => ({\n  type: SELECT_FILE,\n  payload: { file }\n})\n\nexport const fileLoadProgress = (\n  progress: FileLoadProgress\n): FileLoadProgressAction => ({\n  type: FILE_LOAD_PROGRESS,\n  payload: { progress }\n})\n\nexport const cancelFileLoad = (): CancelFileLoadAction => ({\n  type: CANCEL_FILE_LOAD\n})\n\nexport const fileLoaded = (arrayBuffer: ArrayBuffer): FileLoadedAction => ({\n  type: FILE_LOADED,\n  payload: { arrayBuffer }\n})\n\nexport const selectHashType = (hashType: HashType): SelectHashTypeAction => ({\n  type: SELECT_HASH_TYPE,\n  payload: { hashType }\n})\n\nexport const hashCalculated = (hash: Hash): HashCalculatedAction => ({\n  type: HASH_CALCULATED,\n  payload: { hash }\n})\n\n/* Action Type Guards */\nexport const isSelectFileAction = (\n  action: AnyAction\n): action is SelectFileAction => action.type === SELECT_FILE\n\nexport const isFileLoadProgressAction = (\n  action: AnyAction\n): action is FileLoadProgressAction => action.type === FILE_LOAD_PROGRESS\n\nexport const isCancelFileLoadAction = (\n  action: AnyAction\n): action is CancelFileLoadAction => action.type === CANCEL_FILE_LOAD\n\nexport const isFileLoadedAction = (\n  action: AnyAction\n): action is FileLoadedAction => action.type === FILE_LOADED\n\nexport const isSelectHashTypeAction = (\n  action: AnyAction\n): action is SelectHashTypeAction => action.type === SELECT_HASH_TYPE\n\nexport const isHashCalculatedAction = (\n  action: AnyAction\n): action is HashCalculatedAction => action.type === HASH_CALCULATED\n","import styled from 'styled-components'\n\nimport { useSelector, useDispatch } from '../../hooks'\nimport {\n  FilePicker,\n  HashSelector,\n  FileLoader,\n  FileDetails,\n  HashLoader,\n  FileHash,\n  HashVerifier\n} from '..'\nimport { selectFile, cancelFileLoad, selectHashType } from '../../actions'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n`\n\nexport const Shell = () => {\n  const state = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const {\n    file,\n    fileLoadProgress,\n    arrayBuffer,\n    hashType,\n    isCalculatingHash,\n    hash\n  } = state\n\n  const isDisabled = Boolean(fileLoadProgress) || isCalculatingHash\n\n  return (\n    <Wrapper>\n      <FilePicker\n        isDisabled={isDisabled}\n        onSelect={(file) => dispatch(selectFile(file))}\n      />\n      <HashSelector\n        hashType={hashType}\n        isDisabled={isDisabled}\n        onSelect={(hashType) => dispatch(selectHashType(hashType))}\n      />\n      {fileLoadProgress && (\n        <FileLoader\n          progress={fileLoadProgress}\n          onCancel={() => dispatch(cancelFileLoad())}\n        />\n      )}\n      {arrayBuffer && (\n        <>\n          {file && <FileDetails name={file.name} size={file.size} />}\n          {isCalculatingHash && <HashLoader />}\n          {hash && (\n            <>\n              <FileHash hash={hash} />\n              <HashVerifier hash={hash} />\n            </>\n          )}\n        </>\n      )}\n    </Wrapper>\n  )\n}\n","import type { AnyAction } from 'redux'\n\nimport * as Actions from '../actions'\nimport type {\n  FileName,\n  FileSize,\n  FileLoadProgress,\n  HashType,\n  Hash\n} from '../types'\n\ninterface FileDetails {\n  name: FileName\n  size: FileSize\n}\n\ninterface State {\n  file: FileDetails | null\n  fileLoadProgress: FileLoadProgress | null\n  arrayBuffer: ArrayBuffer | null\n  hashType: HashType | null\n  isCalculatingHash: boolean\n  hash: Hash | null\n}\n\nconst initialState: State = {\n  file: null,\n  fileLoadProgress: null,\n  arrayBuffer: null,\n  hashType: null,\n  isCalculatingHash: false,\n  hash: null\n}\n\nconst selectFile = (state: State, action: Actions.SelectFileAction): State => {\n  const { name, size } = action.payload.file\n\n  return {\n    ...state,\n    file: { name, size },\n    arrayBuffer: initialState.arrayBuffer,\n    hash: initialState.hash\n  }\n}\n\nconst fileLoadProgress = (\n  state: State,\n  action: Actions.FileLoadProgressAction\n): State => ({\n  ...state,\n  fileLoadProgress: action.payload.progress\n})\n\nconst cancelFileLoad = (state: State): State => ({\n  ...state,\n  file: initialState.file,\n  fileLoadProgress: initialState.fileLoadProgress\n})\n\nconst fileLoaded = (state: State, action: Actions.FileLoadedAction): State => ({\n  ...state,\n  arrayBuffer: action.payload.arrayBuffer,\n  fileLoadProgress: initialState.fileLoadProgress,\n  isCalculatingHash: Boolean(state.hashType)\n})\n\nconst selectHashType = (\n  state: State,\n  action: Actions.SelectHashTypeAction\n): State => ({\n  ...state,\n  hashType: action.payload.hashType,\n  hash: initialState.hash,\n  isCalculatingHash: Boolean(state.arrayBuffer)\n})\n\nconst hashCalculated = (\n  state: State,\n  action: Actions.HashCalculatedAction\n): State => ({\n  ...state,\n  isCalculatingHash: initialState.isCalculatingHash,\n  hash: action.payload.hash\n})\n\nexport const reducer = (\n  state: State = initialState,\n  action: AnyAction\n): State => {\n  if (Actions.isSelectFileAction(action)) {\n    return selectFile(state, action)\n  }\n  if (Actions.isFileLoadProgressAction(action)) {\n    return fileLoadProgress(state, action)\n  }\n  if (Actions.isCancelFileLoadAction(action)) {\n    return cancelFileLoad(state)\n  }\n  if (Actions.isFileLoadedAction(action)) {\n    return fileLoaded(state, action)\n  }\n  if (Actions.isSelectHashTypeAction(action)) {\n    return selectHashType(state, action)\n  }\n  if (Actions.isHashCalculatedAction(action)) {\n    return hashCalculated(state, action)\n  }\n\n  return state\n}\n","import { takeEvery, call } from 'redux-saga/effects'\n\nimport { SELECT_FILE, SELECT_HASH_TYPE, selectFile } from '../actions'\nimport { getArrayBuffer, calculateHash } from '.'\n\nfunction* processFile(action: ReturnType<typeof selectFile>) {\n  yield call(getArrayBuffer, action.payload.file)\n  yield call(calculateHash)\n}\n\nfunction* processHashType() {\n  yield call(calculateHash)\n}\n\nexport const saga = function* () {\n  yield takeEvery(SELECT_FILE, processFile)\n  yield takeEvery(SELECT_HASH_TYPE, processHashType)\n}\n","import { eventChannel, END, EventChannel } from 'redux-saga'\nimport { take, put, call, race } from 'redux-saga/effects'\n\nimport { fileLoaded, fileLoadProgress } from '../actions'\nimport { CANCEL_FILE_LOAD } from '../actions'\n\nconst createFileReadChannel = (file: File): EventChannel<unknown> => {\n  return eventChannel((emitter) => {\n    let reader = new FileReader()\n\n    const onLoad = (): void => {\n      emitter({ arrayBuffer: reader.result })\n      emitter(END)\n    }\n\n    const onProgress = (event: ProgressEvent): void => {\n      emitter({ progress: Math.round((event.loaded / event.total) * 100) })\n    }\n\n    const onError = (): void => {\n      emitter({ error: reader.error })\n      emitter(END)\n    }\n\n    reader.onload = onLoad\n    reader.onprogress = onProgress\n    reader.onerror = onError\n\n    reader.readAsArrayBuffer(file)\n\n    const unsubscribe = (): void => {\n      if (reader.readyState === 1) {\n        reader.abort()\n      }\n    }\n\n    return unsubscribe\n  })\n}\n\nexport const getArrayBuffer = function* (file: File) {\n  const fileReadChannel: EventChannel<unknown> = yield call(\n    createFileReadChannel,\n    file\n  )\n\n  try {\n    while (true) {\n      const { channelOutput, cancelFileLoad } = yield race({\n        channelOutput: take(fileReadChannel),\n        cancelFileLoad: take(CANCEL_FILE_LOAD)\n      })\n\n      if (channelOutput) {\n        const { progress, arrayBuffer, error } = channelOutput\n\n        if (arrayBuffer) {\n          yield put(fileLoaded(arrayBuffer))\n          return\n        }\n\n        if (error) {\n          console.error('Error during file read operation: ', error)\n          return\n        }\n\n        yield put(fileLoadProgress(progress))\n      } else if (cancelFileLoad) {\n        fileReadChannel.close()\n      }\n    }\n  } finally {\n    fileReadChannel.close()\n  }\n}\n","import { put, call, select, SagaReturnType } from 'redux-saga/effects'\n\nimport { hashCalculated } from '../actions'\nimport type { State } from '../store'\nimport type { HashType } from '../types'\n\nconst getFileHash = async (\n  arrayBuffer: ArrayBuffer,\n  hashType: HashType\n): Promise<string> => {\n  const hashBuffer = await crypto.subtle.digest(hashType, arrayBuffer)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray\n    .map((b) => ('00' + b.toString(16)).slice(-2))\n    .join('')\n\n  return hashHex\n}\n\nexport const calculateHash = function* () {\n  const { arrayBuffer, hashType }: State = yield select()\n\n  if (!arrayBuffer || !hashType) {\n    return\n  }\n\n  const hash: SagaReturnType<typeof getFileHash> = yield call(\n    getFileHash,\n    arrayBuffer,\n    hashType\n  )\n  yield put(hashCalculated(hash))\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport { reducer } from '../reducers'\nimport { saga } from '../sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(reducer, applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(saga)\n\nexport type State = ReturnType<typeof store.getState>\nexport type Dispatch = typeof store.dispatch\n","export default __webpack_public_path__ + \"static/media/github.66378707.svg\";","import { Provider } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { Shell } from './components'\nimport { store } from './store'\n\nimport github from './assets/github.svg'\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  max-width: 64rem;\n  height: 100vh;\n  margin: 0 auto;\n`\n\nconst Header = styled.header`\n  text-align: center;\n`\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`\n\nconst Footer = styled.footer`\n  margin: 2rem;\n`\n\nexport const App = () => (\n  <Main>\n    <Header>\n      <h1>File Hash Verifier</h1>\n    </Header>\n    <Section>\n      <article>\n        <Provider store={store}>\n          <Shell />\n        </Provider>\n      </article>\n    </Section>\n    <Footer>\n      <a href='https://github.com/joelgeorgev/file-hash-verifier'>\n        <img src={github} alt='Go to GitHub repository page' />\n      </a>\n    </Footer>\n  </Main>\n)\n","export default __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.96b15882.woff2\";","export default __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.74ddb2b0.woff\";","import ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\n\nimport { App } from './App'\nimport woff2 from './fonts/source-sans-pro-v11-latin-regular.woff2'\nimport woff from './fonts/source-sans-pro-v11-latin-regular.woff'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n    overscroll-behavior-y: none;\n  }\n\n  /* source-sans-pro-regular - latin */\n  @font-face {\n    font-family: 'Source Sans Pro';\n    font-style: normal;\n    font-weight: 400;\n    font-display: optional;\n    src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'),\n        url(${woff2}) format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url(${woff}) format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n`\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}