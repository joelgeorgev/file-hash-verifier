{"version":3,"sources":["assets/clippy.svg","assets/success.svg","assets/fail.svg","assets/github.svg","components/file-details.js","components/file-hash.js","components/file-loader.js","components/file-picker.js","components/hash-loader.js","components/hash-selector.js","components/hash-verifier.js","actions/index.js","constants/ActionTypes.js","reducers/index.js","reducers/file.js","reducers/arrayBuffer.js","reducers/hashType.js","reducers/progress.js","reducers/loading.js","reducers/hash.js","containers/shell-container.js","components/shell.js","sagas/saga.js","sagas/getArrayBuffer.js","sagas/calculateHash.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","__webpack_require__","p","FileDetails","_ref","file","name","size","react_default","a","createElement","className","FileHash","hash","ref","useRef","useEffect","element","current","clipboard","Clipboard","destroy","type","id","value","readOnly","data-clipboard-target","src","clippy","alt","FileLoader","progress","cancelFileRead","onClick","FilePicker","disabled","onChange","onDragOver","e","preventDefault","onDragLeave","onDrop","htmlFor","multiple","HashLoader","HashSelector","hashType","checked","HashVerifier","_useState","useState","_useState2","Object","slicedToArray","verify","setVerify","_useState3","_useState4","text","setText","_useState5","_useState6","match","setMatch","target","inputText","replace","toLowerCase","success","fail","saveFile","saveArrayBuffer","arrayBuffer","saveHashType","saveProgress","saveLoading","loading","saveHash","rootReducer","combineReducers","state","arguments","length","undefined","action","getFile","getArrayBuffer","getHashType","getProgress","getLoading","getHash","ShellContainer","connect","selectors","dispatch","setFile","files","dataTransfer","setHashType","reading","file_picker_FilePicker","hash_selector_HashSelector","file_loader_FileLoader","Fragment","file_details_FileDetails","hash_loader_HashLoader","file_hash_FileHash","hash_verifier_HashVerifier","processFile","processHashType","regenerator_default","wrap","_context","prev","next","put","call","calculateHash","stop","_marked","_context2","_marked2","saga","mark","_context3","takeEvery","createFileReadChannel","eventChannel","emitter","reader","FileReader","onload","result","END","onprogress","Math","round","loaded","total","onerror","error","readAsArrayBuffer","readyState","abort","fileReadChannel","channelOutput","sent","race","take","abrupt","console","close","finish","_ref2","asyncToGenerator","_callee","hashBuffer","hashArray","hashHex","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","slice","join","_x","apply","this","select","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","role","es","href","github","document","getElementById","navigator","window","addEventListener","swUrl","concat","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch"],"mappings":"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","file":"static/js/main.545ed95b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clippy.1e918ea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.4f20b95a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fail.1e98e874.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.dc6635a4.svg\";","import React from 'react'\n\nexport const FileDetails = ({ file }) => {\n  const { name, size } = file\n\n  return (\n    <div className='mt4'>\n      <div>\n        <label className='b'>Name: </label>\n        <label>{name}</label>\n      </div>\n      <div>\n        <label className='b'>Size: </label>\n        <label>{size} bytes</label>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport Clipboard from 'clipboard'\n\nimport clippy from '../assets/clippy.svg'\n\nexport const FileHash = ({ hash }) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    const { current: element } = ref\n    const clipboard = new Clipboard(element)\n    return () => clipboard.destroy()\n  }, [])\n\n  return (\n    <div className='mt4'>\n      <label className='b'>Hash:</label>\n      <div className='flex h2'>\n        <input\n          type='text'\n          id='hash'\n          value={hash}\n          readOnly\n          className='w-100 ph1 bt br-0 bb bl b--light-silver'\n        />\n        <button\n          ref={ref}\n          data-clipboard-target='#hash'\n          className='bg-transparent ba b--light-silver pointer'\n        >\n          <img src={clippy} alt='Copy to clipboard' className='w1' />\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const FileLoader = ({ progress, cancelFileRead }) => (\n  <div className='flex justify-center mt4 b'>\n    <label>Loading file: {progress}%</label>\n    <button className='ml2' onClick={cancelFileRead}>\n      Cancel\n    </button>\n  </div>\n)\n","import React from 'react'\n\nexport const FilePicker = ({ disabled, onChange }) => {\n  const onDragOver = (e) => e.preventDefault()\n  const onDragLeave = (e) => e.preventDefault()\n  const onDrop = (e) => {\n    e.preventDefault()\n    if (!disabled) {\n      onChange(e)\n    }\n  }\n\n  return (\n    <div\n      className='flex flex-column justify-center h4 ba b--dashed b--light-silver'\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n    >\n      <label htmlFor='file-picker' className='self-center pointer b'>\n        Drop your file here or click to pick one.\n      </label>\n      <input\n        type='file'\n        id='file-picker'\n        multiple={false}\n        className='dn'\n        onChange={onChange}\n        disabled={disabled}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const HashLoader = () => (\n  <div className='flex justify-center mt4 b'>\n    <label>Calculating Hash...</label>\n  </div>\n)\n","import React from 'react'\n\nexport const HashSelector = ({ hashType, disabled, onChange }) => (\n  <div className='flex justify-center mt4 b'>\n    <label>\n      <input\n        type='radio'\n        name='hash-type'\n        value='sha-1'\n        checked={'sha-1' === hashType}\n        className='mh3'\n        onChange={onChange}\n        disabled={disabled}\n      />\n      SHA-1\n    </label>\n    <label>\n      <input\n        type='radio'\n        name='hash-type'\n        value='sha-256'\n        checked={'sha-256' === hashType}\n        className='mh3'\n        onChange={onChange}\n        disabled={disabled}\n      />\n      SHA-256\n    </label>\n    <label>\n      <input\n        type='radio'\n        name='hash-type'\n        value='sha-384'\n        checked={'sha-384' === hashType}\n        className='mh3'\n        onChange={onChange}\n        disabled={disabled}\n      />\n      SHA-384\n    </label>\n    <label>\n      <input\n        type='radio'\n        name='hash-type'\n        value='sha-512'\n        checked={'sha-512' === hashType}\n        className='mh3'\n        onChange={onChange}\n        disabled={disabled}\n      />\n      SHA-512\n    </label>\n  </div>\n)\n","import React, { useState } from 'react'\n\nimport success from '../assets/success.svg'\nimport fail from '../assets/fail.svg'\n\nexport const HashVerifier = ({ hash }) => {\n  const [verify, setVerify] = useState(false)\n  const [text, setText] = useState('')\n  const [match, setMatch] = useState(false)\n\n  const toggleVerify = (e) => setVerify(e.target.checked)\n\n  const verifyHash = (e) => {\n    const inputText = e.target.value\n    setText(inputText)\n    setMatch(hash === inputText.replace(/ /g, '').toLowerCase())\n  }\n\n  return (\n    <div className='flex flex-column mt4'>\n      <div>\n        <input\n          type='checkbox'\n          checked={verify}\n          className='pointer'\n          onChange={toggleVerify}\n        />\n        <label className='ml2 b'>Compare with:</label>\n      </div>\n      {verify && (\n        <div className='flex h2'>\n          <input\n            type='text'\n            value={text}\n            className='w-100 ph1 bt br-0 bb bl b--light-silver'\n            onChange={verifyHash}\n          />\n          <button className='bg-transparent ba b--light-silver'>\n            <img\n              src={match ? success : fail}\n              alt={match ? 'Success' : 'Fail'}\n              className='w1'\n            />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n","import {\n  SET_FILE,\n  SET_HASH_TYPE,\n  CANCEL_FILE_READ,\n  SAVE_FILE,\n  SAVE_ARRAYBUFFER,\n  SAVE_HASH_TYPE,\n  SAVE_PROGRESS,\n  SAVE_LOADING,\n  SAVE_HASH\n} from '../constants/ActionTypes'\n\n// UI actions\nexport const setFile = (file) => ({\n  type: SET_FILE,\n  file\n})\nexport const setHashType = (hashType) => ({\n  type: SET_HASH_TYPE,\n  hashType\n})\nexport const cancelFileRead = () => ({\n  type: CANCEL_FILE_READ\n})\n\n// Saga actions\nexport const saveFile = (file) => ({\n  type: SAVE_FILE,\n  file\n})\nexport const saveArrayBuffer = (arrayBuffer) => ({\n  type: SAVE_ARRAYBUFFER,\n  arrayBuffer\n})\nexport const saveHashType = (hashType) => ({\n  type: SAVE_HASH_TYPE,\n  hashType\n})\nexport const saveProgress = (progress) => ({\n  type: SAVE_PROGRESS,\n  progress\n})\nexport const saveLoading = (loading) => ({\n  type: SAVE_LOADING,\n  loading\n})\nexport const saveHash = (hash) => ({\n  type: SAVE_HASH,\n  hash\n})\n","// UI actions\nexport const SET_FILE = 'SET_FILE'\nexport const SET_HASH_TYPE = 'SET_HASH_TYPE'\nexport const CANCEL_FILE_READ = 'CANCEL_FILE_READ'\n\n// Saga actions\nexport const SAVE_FILE = 'SAVE_FILE'\nexport const SAVE_ARRAYBUFFER = 'SAVE_ARRAYBUFFER'\nexport const SAVE_HASH_TYPE = 'SAVE_HASH_TYPE'\nexport const SAVE_PROGRESS = 'SAVE_PROGRESS'\nexport const SAVE_LOADING = 'SAVE_LOADING'\nexport const SAVE_HASH = 'SAVE_HASH'\n","import { combineReducers } from 'redux'\n\nimport { file } from './file'\nimport { arrayBuffer } from './arrayBuffer'\nimport { hashType } from './hashType'\nimport { progress } from './progress'\nimport { loading } from './loading'\nimport { hash } from './hash'\n\nexport const rootReducer = combineReducers({\n  file,\n  arrayBuffer,\n  hashType,\n  progress,\n  loading,\n  hash\n})\n\n// Selectors\nexport const getFile = (state) => state.file\nexport const getArrayBuffer = (state) => state.arrayBuffer\nexport const getHashType = (state) => state.hashType\nexport const getProgress = (state) => state.progress\nexport const getLoading = (state) => state.loading\nexport const getHash = (state) => state.hash\n","import { SAVE_FILE } from '../constants/ActionTypes'\n\nexport const file = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_FILE:\n      return action.file\n    default:\n      return state\n  }\n}\n","import { SAVE_ARRAYBUFFER } from '../constants/ActionTypes'\n\nexport const arrayBuffer = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_ARRAYBUFFER:\n      return action.arrayBuffer\n    default:\n      return state\n  }\n}\n","import { SAVE_HASH_TYPE } from '../constants/ActionTypes'\n\nexport const hashType = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH_TYPE:\n      return action.hashType\n    default:\n      return state\n  }\n}\n","import { SAVE_PROGRESS } from '../constants/ActionTypes'\n\nexport const progress = (state = 100, action) => {\n  switch (action.type) {\n    case SAVE_PROGRESS:\n      return action.progress\n    default:\n      return state\n  }\n}\n","import { SAVE_LOADING } from '../constants/ActionTypes'\n\nexport const loading = (state = false, action) => {\n  switch (action.type) {\n    case SAVE_LOADING:\n      return action.loading\n    default:\n      return state\n  }\n}\n","import { SAVE_HASH } from '../constants/ActionTypes'\n\nexport const hash = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH:\n      return action.hash\n    default:\n      return state\n  }\n}\n","import { connect } from 'react-redux'\n\nimport { Shell } from '../components'\nimport { setFile, setHashType, cancelFileRead } from '../actions'\nimport * as selectors from '../reducers'\n\nconst mapStateToProps = (state) => ({\n  file: selectors.getFile(state),\n  arrayBuffer: selectors.getArrayBuffer(state),\n  hashType: selectors.getHashType(state),\n  progress: selectors.getProgress(state),\n  loading: selectors.getLoading(state),\n  hash: selectors.getHash(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFile: (e) => {\n    const files =\n      e.dataTransfer && e.dataTransfer.files\n        ? e.dataTransfer.files\n        : e.target.files\n    if (files.length) {\n      dispatch(setFile(files[0]))\n    }\n    e.target.value = null\n  },\n  setHashType: (e) => dispatch(setHashType(e.target.value)),\n  cancelFileRead: () => dispatch(cancelFileRead())\n})\n\nexport const ShellContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Shell)\n","import React from 'react'\n\nimport {\n  FilePicker,\n  HashSelector,\n  FileLoader,\n  FileDetails,\n  HashLoader,\n  FileHash,\n  HashVerifier\n} from '.'\n\nexport const Shell = ({\n  file,\n  arrayBuffer,\n  hashType,\n  progress,\n  loading,\n  hash,\n  setFile,\n  setHashType,\n  cancelFileRead\n}) => {\n  const reading = progress !== 100 && progress !== -1\n  const disabled = reading || loading\n\n  return (\n    <div className='flex flex-column w-80 center'>\n      <div className='flex flex-auto flex-column'>\n        <FilePicker onChange={setFile} disabled={disabled} />\n        <HashSelector\n          hashType={hashType}\n          onChange={setHashType}\n          disabled={disabled}\n        />\n        {reading && (\n          <FileLoader progress={progress} cancelFileRead={cancelFileRead} />\n        )}\n        {arrayBuffer && (\n          <>\n            <FileDetails file={file} />\n            {loading && <HashLoader />}\n            {hash && (\n              <>\n                <FileHash hash={hash} />\n                <HashVerifier hash={hash} />\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { takeEvery, put, call } from 'redux-saga/effects'\n\nimport { saveFile, saveHashType } from '../actions'\nimport { SET_FILE, SET_HASH_TYPE } from '../constants/ActionTypes'\nimport { getArrayBuffer, calculateHash } from '.'\n\nfunction* processFile(action) {\n  const { file } = action\n  yield put(saveFile(file))\n  yield call(getArrayBuffer, file)\n  yield call(calculateHash)\n}\n\nfunction* processHashType(action) {\n  const { hashType } = action\n  yield put(saveHashType(hashType))\n  yield call(calculateHash)\n}\n\nexport const saga = function*() {\n  yield takeEvery(SET_FILE, processFile)\n  yield takeEvery(SET_HASH_TYPE, processHashType)\n}\n","import { eventChannel, END } from 'redux-saga'\nimport { take, put, call, race } from 'redux-saga/effects'\n\nimport { saveFile, saveArrayBuffer, saveProgress } from '../actions'\nimport { CANCEL_FILE_READ } from '../constants/ActionTypes'\n\nconst createFileReadChannel = (file) => {\n  return eventChannel((emitter) => {\n    let reader = new FileReader()\n\n    const onLoad = () => {\n      emitter({ arrayBuffer: reader.result })\n      emitter(END)\n    }\n    const onProgress = (e) => {\n      emitter({ progress: Math.round((e.loaded / e.total) * 100) })\n    }\n    const onError = (error) => {\n      emitter({ error })\n      emitter(END)\n    }\n\n    reader.onload = onLoad\n    reader.onprogress = onProgress\n    reader.onerror = onError\n\n    reader.readAsArrayBuffer(file)\n\n    const unsubscribe = () => {\n      if (reader.readyState === 1) {\n        reader.abort()\n      }\n      reader = null\n    }\n    return unsubscribe\n  })\n}\n\nexport const getArrayBuffer = function*(file) {\n  yield put(saveArrayBuffer(null))\n  const fileReadChannel = yield call(createFileReadChannel, file)\n  try {\n    while (true) {\n      const { channelOutput, cancelFileRead } = yield race({\n        channelOutput: take(fileReadChannel),\n        cancelFileRead: take(CANCEL_FILE_READ)\n      })\n      if (channelOutput) {\n        const { progress, arrayBuffer, error } = channelOutput\n        if (arrayBuffer) {\n          yield put(saveArrayBuffer(arrayBuffer))\n          return\n        }\n        if (error) {\n          console.error('Error during file read operation: ', error)\n          return\n        }\n        yield put(saveProgress(progress))\n      } else if (cancelFileRead) {\n        fileReadChannel.close()\n        yield put(saveProgress(-1))\n        yield put(saveFile(null))\n      }\n    }\n  } finally {\n    fileReadChannel.close()\n  }\n}\n","import { put, call, select } from 'redux-saga/effects'\n\nimport { saveLoading, saveHash } from '../actions'\nimport { getArrayBuffer, getHashType } from '../reducers'\n\nconst getHash = async ({ arrayBuffer, hashType }) => {\n  if (arrayBuffer && hashType) {\n    const hashBuffer = await crypto.subtle.digest(hashType, arrayBuffer)\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\n    const hashHex = hashArray\n      .map((b) => ('00' + b.toString(16)).slice(-2))\n      .join('')\n    return hashHex\n  }\n  return ''\n}\n\nexport const calculateHash = function*() {\n  yield put(saveHash(''))\n  yield put(saveLoading(true))\n  const arrayBuffer = yield select(getArrayBuffer)\n  const hashType = yield select(getHashType)\n  const hash = yield call(getHash, { arrayBuffer, hashType })\n  yield put(saveHash(hash))\n  yield put(saveLoading(false))\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport 'tachyons/css/tachyons.min.css'\n\nimport { ShellContainer } from './containers'\nimport { rootReducer } from './reducers'\nimport { saga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nexport const App = () => (\n  <main role='main'>\n    <section className='flex flex-column w-80 mw8 vh-100 center pv5'>\n      <div className='flex flex-auto flex-column'>\n        <Provider store={store}>\n          <ShellContainer />\n        </Provider>\n      </div>\n      <div className='self-center'>\n        <a href='https://github.com/joelgeorgev/file-hash-verifier'>\n          <img src={github} alt='GitHub' />\n        </a>\n      </div>\n    </section>\n  </main>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}