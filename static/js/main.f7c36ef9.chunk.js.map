{"version":3,"sources":["assets/clippy.svg","assets/success.svg","assets/fail.svg","assets/github.svg","components/file-details.js","components/file-hash.js","components/file-loader.js","components/file-picker.js","components/hash-loader.js","components/hash-selector.js","components/hash-verifier.js","actions/index.js","constants/ActionTypes.js","containers/shell-container.js","components/shell.js","reducers/index.js","reducers/file.js","reducers/arrayBuffer.js","reducers/hashType.js","reducers/progress.js","reducers/loading.js","reducers/hash.js","sagas/saga.js","sagas/getArrayBuffer.js","sagas/selectors.js","sagas/calculateHash.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","__webpack_require__","p","FileDetails","_ref","file","name","size","react_default","a","createElement","className","FileHash","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Clipboard","inherits","createClass","key","value","hash","type","id","readOnly","data-clipboard-target","src","clippy","alt","React","PureComponent","FileLoader","progress","cancelFileRead","onClick","FilePicker","disabled","onChange","onDragOver","e","preventDefault","onDragLeave","onDrop","htmlFor","multiple","HashLoader","HashSelector","hashType","checked","HashVerifier","toggleVerify","setState","verify","target","verifyHash","text","match","replace","toLowerCase","state","_this$state","success","fail","nextProps","prevState","saveFile","saveArrayBuffer","arrayBuffer","saveHashType","saveProgress","saveLoading","loading","saveHash","ShellContainer","connect","dispatch","setFile","files","dataTransfer","length","setHashType","reading","file_picker_FilePicker","hash_selector_HashSelector","file_loader_FileLoader","Fragment","file_details_FileDetails","hash_loader_HashLoader","file_hash_FileHash","hash_verifier_HashVerifier","rootReducer","combineReducers","arguments","undefined","action","processFile","processHashType","regenerator_default","wrap","_context","prev","next","put","getArrayBuffer","calculateHash","stop","_marked","_context2","_marked2","saga","mark","_context3","takeEvery","createFileReadChannel","eventChannel","emitter","reader","FileReader","onload","result","END","onprogress","Math","round","loaded","total","onerror","error","readAsArrayBuffer","readyState","abort","fileReadChannel","channelOutput","sent","race","take","abrupt","console","close","finish","arrayBufferSelector","hashTypeSelector","getHash","_ref2","asyncToGenerator","_callee","hashBuffer","hashArray","hashHex","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","slice","join","_x","apply","select","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","href","github","document","getElementById","navigator","window","addEventListener","swUrl","concat","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch"],"mappings":"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","file":"static/js/main.f7c36ef9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clippy.1e918ea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.4f20b95a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fail.1e98e874.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.dc6635a4.svg\";","import React from 'react'\n\nexport const FileDetails = ({ file }) => {\n  const { name, size } = file\n\n  return (\n    <div className='mt4'>\n      <div>\n        <label className='b'>Name: </label>\n        <label>{name}</label>\n      </div>\n      <div>\n        <label className='b'>Size: </label>\n        <label>{size} bytes</label>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport Clipboard from 'clipboard'\n\nimport clippy from '../assets/clippy.svg'\n\nexport class FileHash extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    new Clipboard('#btn')\n  }\n\n  render() {\n    const { hash } = this.props\n    return (\n      <div className='mt4'>\n        <label className='b'>Hash:</label>\n        <div className='flex h2'>\n          <input type='text' id='hash' value={hash} readOnly\n            className='w-100 ph1 bt br-0 bb bl b--light-silver' />\n          <button id='btn' data-clipboard-target='#hash'\n            className='bg-transparent ba b--light-silver pointer'>\n            <img src={clippy} alt='Copy to clipboard' className='w1' />\n          </button>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\n\nexport const FileLoader = ({ progress, cancelFileRead }) => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <div>\n        <label>Loading file: {progress}%</label>\n        <button className='ml2' onClick={cancelFileRead}>Cancel</button>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport const FilePicker = ({ disabled, onChange }) => {\n  const onDragOver = (e) => {\n    e.preventDefault()\n  }\n\n  const onDragLeave = (e) => {\n    e.preventDefault()\n  }\n\n  const onDrop = (e) => {\n    e.preventDefault()\n    if (!disabled) {\n      onChange(e)\n    }\n  }\n  return (\n    <div className='flex flex-column justify-center h4 ba b--dashed b--light-silver'\n      onDragOver={onDragOver} onDragLeave={onDragLeave}\n      onDrop={onDrop}>\n      <label htmlFor='file-picker' className='self-center pointer b'>Drop your file here or click to pick one.</label>\n      <input type='file' id='file-picker' multiple={false} className='dn' onChange={onChange}\n        disabled={disabled} />\n    </div>\n  )\n}","import React from 'react'\n\nexport const HashLoader = () => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <label>Calculating Hash...</label>\n    </div>\n  )\n}","import React from 'react'\n\nexport const HashSelector = ({ hashType, disabled, onChange }) => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <input type='radio' name='hash-type' value='sha-1' checked={'sha-1' === hashType}\n        className='mh2' onChange={onChange} disabled={disabled} />SHA-1\n        <input type='radio' name='hash-type' value='sha-256' checked={'sha-256' === hashType}\n        className='mh2' onChange={onChange} disabled={disabled} />SHA-256\n        <input type='radio' name='hash-type' value='sha-384' checked={'sha-384' === hashType}\n        className='mh2' onChange={onChange} disabled={disabled} />SHA-384\n        <input type='radio' name='hash-type' value='sha-512' checked={'sha-512' === hashType}\n        className='mh2' onChange={onChange} disabled={disabled} />SHA-512\n      </div>\n  )\n}","import React from 'react'\n\nimport success from '../assets/success.svg'\nimport fail from '../assets/fail.svg'\n\nexport class HashVerifier extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      verify: false,\n      text: '',\n      match: false\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      match: nextProps.hash === prevState.text.replace(/ /g, '').toLowerCase()\n    }\n  }\n\n  toggleVerify = (e) => {\n    this.setState({\n      verify: e.target.checked\n    })\n  }\n\n  verifyHash = (e) => {\n    const text = e.target.value\n    this.setState({\n      text,\n      match: this.props.hash === text.replace(/ /g, '').toLowerCase()\n    })\n  }\n\n  render() {\n    const { verify, text, match } = this.state\n    return (\n      <div className='flex flex-column mt4'>\n        <div>\n          <input type='checkbox' checked={verify} className='pointer'\n            onChange={this.toggleVerify} />\n          <label className='ml2 b'>Compare with:</label>\n        </div>\n        {verify &&\n          <div className='flex h2'>\n            <input type='text' value={text}\n              className='w-100 ph1 bt br-0 bb bl b--light-silver'\n              onChange={this.verifyHash} />\n            <button className='bg-transparent ba b--light-silver'>\n              <img src={match ? success : fail}\n                alt={match ? 'Success' : 'Fail'} className='w1' />\n            </button>\n          </div>}\n      </div>\n    )\n  }\n}","import {\n  SET_FILE, SET_HASH_TYPE, CANCEL_FILE_READ, SAVE_FILE,\n  SAVE_ARRAYBUFFER, SAVE_HASH_TYPE, SAVE_PROGRESS, SAVE_LOADING,\n  SAVE_HASH\n}\n  from '../constants/ActionTypes'\n\n// UI actions\nexport const setFile = (file) => { return { type: SET_FILE, file } }\nexport const setHashType = (hashType) => { return { type: SET_HASH_TYPE, hashType } }\nexport const cancelFileRead = () => { return { type: CANCEL_FILE_READ } }\n\n// Saga actions\nexport const saveFile = (file) => { return { type: SAVE_FILE, file } }\nexport const saveArrayBuffer = (arrayBuffer) => { return { type: SAVE_ARRAYBUFFER, arrayBuffer } }\nexport const saveHashType = (hashType) => { return { type: SAVE_HASH_TYPE, hashType } }\nexport const saveProgress = (progress) => { return { type: SAVE_PROGRESS, progress } }\nexport const saveLoading = (loading) => { return { type: SAVE_LOADING, loading } }\nexport const saveHash = (hash) => { return { type: SAVE_HASH, hash } }","// UI actions\nexport const SET_FILE = 'SET_FILE'\nexport const SET_HASH_TYPE = 'SET_HASH_TYPE'\nexport const CANCEL_FILE_READ = 'CANCEL_FILE_READ'\n\n// Saga actions\nexport const SAVE_FILE = 'SAVE_FILE'\nexport const SAVE_ARRAYBUFFER = 'SAVE_ARRAYBUFFER'\nexport const SAVE_HASH_TYPE = 'SAVE_HASH_TYPE'\nexport const SAVE_PROGRESS = 'SAVE_PROGRESS'\nexport const SAVE_LOADING = 'SAVE_LOADING'\nexport const SAVE_HASH = 'SAVE_HASH'","import { connect } from 'react-redux'\n\nimport { Shell } from '../components'\nimport { setFile, setHashType, cancelFileRead } from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    file: state.file,\n    arrayBuffer: state.arrayBuffer,\n    hashType: state.hashType,\n    progress: state.progress,\n    loading: state.loading,\n    hash: state.hash\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFile: (e) => {\n      const files = e.dataTransfer && e.dataTransfer.files ? e.dataTransfer.files : e.target.files\n      if (files.length) {\n        dispatch(setFile(files[0]))\n      }\n      e.target.value = null\n    },\n    setHashType: (e) => {\n      dispatch(setHashType(e.target.value))\n    },\n    cancelFileRead: () => {\n      dispatch(cancelFileRead())\n    }\n  }\n}\n\nexport const ShellContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Shell)","import React from 'react'\n\nimport {\n  FilePicker, HashSelector, FileLoader, FileDetails,\n  HashLoader, FileHash, HashVerifier\n} from '.'\n\nexport const Shell = ({ file, arrayBuffer, hashType, progress,\n  loading, hash, setFile, setHashType, cancelFileRead }) => {\n  const reading = progress !== 100 && progress !== -1\n  const disabled = reading || loading\n\n  return (\n    <div className='flex flex-column w-80 mw8 vh-100 center pv4'>\n      <div className='flex flex-auto flex-column'>\n        <FilePicker onChange={setFile} disabled={disabled} />\n        <HashSelector hashType={hashType} onChange={setHashType} disabled={disabled} />\n        {reading && <FileLoader progress={progress} cancelFileRead={cancelFileRead} />}\n        {arrayBuffer &&\n          <React.Fragment>\n            <FileDetails file={file} />\n            {loading && <HashLoader />}\n            {hash &&\n              <div>\n                <FileHash hash={hash} />\n                <HashVerifier hash={hash} />\n              </div>}\n          </React.Fragment>\n        }\n      </div>\n    </div>\n  )\n}","import { combineReducers } from 'redux'\n\nimport { file } from './file'\nimport { arrayBuffer } from './arrayBuffer'\nimport { hashType } from './hashType'\nimport { progress } from './progress'\nimport { loading } from './loading'\nimport { hash } from './hash'\n\nexport const rootReducer = combineReducers({\n  file,\n  arrayBuffer,\n  hashType,\n  progress,\n  loading,\n  hash\n})","import { SAVE_FILE } from '../constants/ActionTypes'\n\nexport const file = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_FILE:\n      return action.file\n    default:\n      return state\n  }\n}","import { SAVE_ARRAYBUFFER } from '../constants/ActionTypes'\n\nexport const arrayBuffer = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_ARRAYBUFFER:\n      return action.arrayBuffer\n    default:\n      return state\n  }\n}","import { SAVE_HASH_TYPE } from '../constants/ActionTypes'\n\nexport const hashType = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH_TYPE:\n      return action.hashType\n    default:\n      return state\n  }\n}","import { SAVE_PROGRESS } from '../constants/ActionTypes'\n\nexport const progress = (state = 100, action) => {\n  switch (action.type) {\n    case SAVE_PROGRESS:\n      return action.progress\n    default:\n      return state\n  }\n}","import { SAVE_LOADING } from '../constants/ActionTypes'\n\nexport const loading = (state = false, action) => {\n  switch (action.type) {\n    case SAVE_LOADING:\n      return action.loading\n    default:\n      return state\n  }\n}","import { SAVE_HASH } from '../constants/ActionTypes'\n\nexport const hash = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH:\n      return action.hash\n    default:\n      return state\n  }\n}","import { takeEvery, put, call } from 'redux-saga/effects'\n\nimport { saveFile, saveHashType } from '../actions'\nimport { SET_FILE, SET_HASH_TYPE } from '../constants/ActionTypes'\nimport { getArrayBuffer, calculateHash } from '.'\n\nfunction* processFile(action) {\n  const { file } = action\n  yield put(saveFile(file))\n  yield call(getArrayBuffer, file)\n  yield call(calculateHash)\n}\n\nfunction* processHashType(action) {\n  const { hashType } = action\n  yield put(saveHashType(hashType))\n  yield call(calculateHash)\n}\n\nexport const saga = function* () {\n  yield takeEvery(SET_FILE, processFile)\n  yield takeEvery(SET_HASH_TYPE, processHashType)\n}","import { eventChannel, END } from 'redux-saga'\nimport { take, put, call, race } from 'redux-saga/effects'\n\nimport { saveFile, saveArrayBuffer, saveProgress } from '../actions'\nimport { CANCEL_FILE_READ } from '../constants/ActionTypes'\n\nconst createFileReadChannel = (file) => {\n  return eventChannel((emitter) => {\n    let reader = new FileReader()\n\n    const onLoad = () => { emitter({ arrayBuffer: reader.result }); emitter(END) }\n    const onProgress = (e) => { emitter({ progress: Math.round((e.loaded / e.total) * 100) }) }\n    const onError = (error) => { emitter({ error }); emitter(END) }\n\n    reader.onload = onLoad\n    reader.onprogress = onProgress\n    reader.onerror = onError\n\n    reader.readAsArrayBuffer(file)\n\n    const unsubscribe = () => {\n      if (reader.readyState === 1) {\n        reader.abort()\n      }\n      reader = null\n    }\n    return unsubscribe\n  })\n}\n\nexport const getArrayBuffer = function* (file) {\n  yield put(saveArrayBuffer(null))\n  const fileReadChannel = yield call(createFileReadChannel, file)\n  try {\n    while (true) {\n      const { channelOutput, cancelFileRead } = yield race({\n        channelOutput: take(fileReadChannel),\n        cancelFileRead: take(CANCEL_FILE_READ)\n      })\n      if (channelOutput) {\n        const { progress, arrayBuffer, error } = channelOutput\n        if (arrayBuffer) {\n          yield put(saveArrayBuffer(arrayBuffer))\n          return\n        }\n        if (error) {\n          console.error('Error during file read operation: ', error)\n          return\n        }\n        yield put(saveProgress(progress))\n      }\n      else if (cancelFileRead) {\n        fileReadChannel.close()\n        yield put(saveProgress(-1))\n        yield put(saveFile(null))\n      }\n    }\n  }\n  finally {\n    fileReadChannel.close()\n  }\n}","export const arrayBufferSelector = (state) => state.arrayBuffer\nexport const hashTypeSelector = (state) => state.hashType","import { put, call, select } from 'redux-saga/effects'\n\nimport { saveLoading, saveHash } from '../actions'\nimport { arrayBufferSelector, hashTypeSelector } from '.'\n\nconst getHash = async ({ arrayBuffer, hashType }) => {\n  if (arrayBuffer && hashType) {\n    const hashBuffer = await crypto.subtle.digest(hashType, arrayBuffer)\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\n    const hashHex = hashArray.map(b => ('00' + b.toString(16)).slice(-2)).join('')\n    return hashHex\n  }\n  return ''\n}\n\nexport const calculateHash = function* () {\n  yield put(saveHash(''))\n  yield put(saveLoading(true))\n  const arrayBuffer = yield select(arrayBufferSelector)\n  const hashType = yield select(hashTypeSelector)\n  const hash = yield call(getHash, { arrayBuffer, hashType })\n  yield put(saveHash(hash))\n  yield put(saveLoading(false))\n}","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport 'tachyons/css/tachyons.min.css'\n\nimport { ShellContainer } from './containers'\nimport { rootReducer } from './reducers'\nimport { saga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nexport const App = () => {\n  return (\n    <div className='flex flex-column w-80 mw8 vh-100 center pv4'>\n      <div className='flex flex-auto flex-column'>\n        <Provider store={store}>\n          <ShellContainer />\n        </Provider>\n      </div>\n      <div className='self-center'>\n        <a href='https://github.com/joelgeorgev/file-hash-verifier'>\n          <img src={github} alt='GitHub' />\n        </a>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}