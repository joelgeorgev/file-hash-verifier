{"version":3,"sources":["components/FileDetails/FileDetails.tsx","assets/clippy.svg","components/FileHash/FileHash.tsx","components/FileLoader/FileLoader.tsx","components/FilePicker/FilePicker.tsx","components/HashLoader/HashLoader.tsx","components/HashSelector/HashSelector.tsx","assets/success.svg","assets/fail.svg","components/HashVerifier/HashVerifier.tsx","components/Shell/Shell.js","actions/index.ts","containers/ShellContainer/ShellContainer.js","reducers/index.ts","sagas/saga.js","sagas/getArrayBuffer.js","sagas/calculateHash.js","assets/github.svg","App.tsx","fonts/source-sans-pro-v11-latin-regular.woff2","fonts/source-sans-pro-v11-latin-regular.woff","index.tsx"],"names":["Wrapper","styled","dl","Key","dt","Value","dd","FileDetails","name","size","div","Label","label","HashWrapper","TextInput","input","Button","button","Image","img","FileHash","hash","htmlFor","type","id","value","readOnly","onClick","copy","src","clippy","alt","Progress","progress","FileLoader","onCancel","max","FilePicker","isDisabled","onSelect","multiple","disabled","onChange","event","files","target","HashLoader","FieldSet","fieldset","Input","radioButtons","HashSelector","hashType","map","checked","VerifyWrapper","HashVerifier","useState","text","setText","isMatch","setMatch","inputText","replace","toLowerCase","success","fail","SELECT_FILE","FILE_LOAD_PROGRESS","CANCEL_FILE_LOAD","FILE_LOADED","SELECT_HASH_TYPE","HASH_CALCULATED","fileLoadProgress","payload","fileLoaded","arrayBuffer","hashCalculated","isSelectFileAction","action","isFileLoadProgressAction","isCancelFileLoadAction","isFileLoadedAction","isSelectHashTypeAction","isHashCalculatedAction","ShellContainer","connect","state","file","isCalculatingHash","dispatch","handleSelectFile","selectFile","handleCancelFileLoad","handleSelectHashType","selectHashType","initialState","cancelFileLoad","Boolean","processFile","processHashType","call","getArrayBuffer","calculateHash","saga","takeEvery","createFileReadChannel","eventChannel","emitter","reader","FileReader","onload","result","END","onprogress","e","Math","round","loaded","total","onerror","error","readAsArrayBuffer","readyState","abort","fileReadChannel","race","channelOutput","take","put","console","close","getHash","a","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","b","toString","slice","join","getHashType","select","sagaMiddleware","createSagaMiddleware","store","createStore","Actions","applyMiddleware","run","Main","main","Header","header","Section","section","Footer","footer","App","href","github","GlobalStyle","createGlobalStyle","woff2","woff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.464fd5dc.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nimport { FileName, FileSize } from '../../types'\n\ninterface Props {\n  name: FileName\n  size: FileSize\n}\n\nconst Wrapper = styled.dl`\n  margin-top: 2rem;\n`\n\nconst Key = styled.dt`\n  font-weight: 700;\n`\n\nconst Value = styled.dd`\n  word-break: break-all;\n  margin-bottom: 0.5rem;\n`\n\nexport const FileDetails = ({ name, size }: Props) => (\n  <Wrapper>\n    <Key>Name</Key>\n    <Value>{name}</Value>\n    <Key>Size</Key>\n    <Value>{size} bytes</Value>\n  </Wrapper>\n)\n","export default __webpack_public_path__ + \"static/media/clippy.b0e31af4.svg\";","import copy from 'clipboard-copy'\nimport styled from 'styled-components'\n\nimport { Hash } from '../../types'\n\nimport clippy from '../../assets/clippy.svg'\n\ninterface Props {\n  hash: Hash\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n`\n\nconst HashWrapper = styled.div`\n  display: flex;\n  height: 2rem;\n`\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0 0.25rem;\n  border: 1px solid #aaa;\n  border-right: 0;\n`\n\nconst Button = styled.button`\n  border: 1px solid #aaa;\n  width: 2rem;\n  background-color: transparent;\n  cursor: pointer;\n`\n\nconst Image = styled.img`\n  max-width: 100%;\n`\n\nexport const FileHash = ({ hash }: Props) => (\n  <Wrapper>\n    <Label htmlFor='hash'>Hash:</Label>\n    <HashWrapper>\n      <TextInput type='text' id='hash' value={hash} readOnly />\n      <Button onClick={() => copy(hash)}>\n        <Image src={clippy} alt='Copy to clipboard' />\n      </Button>\n    </HashWrapper>\n  </Wrapper>\n)\n","import styled from 'styled-components'\n\nimport { FileLoadProgress } from '../../types'\n\ninterface Props {\n  progress: FileLoadProgress\n  onCancel: () => void\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n`\n\nconst Progress = styled.progress`\n  margin: 0 1rem;\n`\n\nexport const FileLoader = ({ progress, onCancel }: Props) => (\n  <Wrapper>\n    <label htmlFor='file-load-progress'>Loading file:</label>\n    <Progress id='file-load-progress' max='100' value={`${progress}`} />\n    {progress !== 100 && <button onClick={onCancel}>Cancel</button>}\n  </Wrapper>\n)\n","import styled from 'styled-components'\n\ninterface Props {\n  isDisabled: boolean\n  onSelect: (file: File) => void\n}\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 700;\n  margin-bottom: 1rem;\n`\n\nexport const FilePicker = ({ isDisabled, onSelect }: Props) => (\n  <>\n    <Label htmlFor='file-picker'>Click to pick a file.</Label>\n    <input\n      type='file'\n      id='file-picker'\n      multiple={false}\n      disabled={isDisabled}\n      onChange={(event) => {\n        const { files } = event.target\n\n        if (files) {\n          onSelect(files[0])\n        }\n      }}\n    />\n  </>\n)\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n`\n\nexport const HashLoader = () => <Wrapper>Calculating Hash...</Wrapper>\n","import styled from 'styled-components'\n\nimport { HashType } from '../../types'\n\ninterface Props {\n  hashType: HashType | null\n  isDisabled: boolean\n  onSelect: (hashType: HashType) => void\n}\n\nconst FieldSet = styled.fieldset`\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n  font-weight: 700;\n  text-align: center;\n  border: 0;\n`\n\nconst Input = styled.input`\n  margin: 0 1rem;\n`\n\nconst radioButtons: [string, HashType][] = [\n  ['SHA-1', 'sha-1'],\n  ['SHA-256', 'sha-256'],\n  ['SHA-384', 'sha-384'],\n  ['SHA-512', 'sha-512']\n]\n\nexport const HashSelector = ({ hashType, isDisabled, onSelect }: Props) => (\n  <FieldSet disabled={isDisabled}>\n    {radioButtons.map(([label, value]) => (\n      <label key={value}>\n        <Input\n          type='radio'\n          name='hash-type'\n          value={value}\n          checked={value === hashType}\n          onChange={(event) => onSelect(event.target.value as typeof value)}\n        />\n        {label}\n      </label>\n    ))}\n  </FieldSet>\n)\n","export default __webpack_public_path__ + \"static/media/success.f94dc787.svg\";","export default __webpack_public_path__ + \"static/media/fail.47429a71.svg\";","import { useState, ChangeEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { Hash } from '../../types'\n\nimport success from '../../assets/success.svg'\nimport fail from '../../assets/fail.svg'\n\ninterface Props {\n  hash: Hash\n}\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst Label = styled.label`\n  font-weight: 700;\n`\n\nconst VerifyWrapper = styled.div`\n  display: flex;\n  height: 2rem;\n`\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0 0.25rem;\n  border: 1px solid #aaa;\n  ${({ value }) => value && ` border-right: 0;`}\n`\n\nconst Image = styled.img`\n  width: 2rem;\n  border: 1px solid #aaa;\n`\n\nexport const HashVerifier = ({ hash }: Props) => {\n  const [text, setText] = useState<string>('')\n  const [isMatch, setMatch] = useState<boolean>(false)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const inputText = event.target.value\n\n    setText(inputText)\n    setMatch(hash === inputText.replace(/ /g, '').toLowerCase())\n  }\n\n  return (\n    <Wrapper>\n      <Label htmlFor='hash-verify'>Compare with:</Label>\n      <VerifyWrapper>\n        <TextInput\n          type='text'\n          id='hash-verify'\n          value={text}\n          onChange={handleChange}\n        />\n        {text && (\n          <Image\n            src={isMatch ? success : fail}\n            alt={isMatch ? 'Success' : 'Fail'}\n          />\n        )}\n      </VerifyWrapper>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  FilePicker,\n  HashSelector,\n  FileLoader,\n  FileDetails,\n  HashLoader,\n  FileHash,\n  HashVerifier\n} from '..'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n`\n\nexport const Shell = ({\n  file,\n  fileLoadProgress,\n  arrayBuffer,\n  hashType,\n  isCalculatingHash,\n  hash,\n  handleSelectFile,\n  handleCancelFileLoad,\n  handleSelectHashType\n}) => {\n  const isDisabled = fileLoadProgress || isCalculatingHash\n\n  return (\n    <Wrapper>\n      <FilePicker isDisabled={isDisabled} onSelect={handleSelectFile} />\n      <HashSelector\n        hashType={hashType}\n        isDisabled={isDisabled}\n        onSelect={handleSelectHashType}\n      />\n      {fileLoadProgress && (\n        <FileLoader\n          progress={fileLoadProgress}\n          onCancel={handleCancelFileLoad}\n        />\n      )}\n      {arrayBuffer && (\n        <>\n          <FileDetails name={file.name} size={file.size} />\n          {isCalculatingHash && <HashLoader />}\n          {hash && (\n            <>\n              <FileHash hash={hash} />\n              <HashVerifier hash={hash} />\n            </>\n          )}\n        </>\n      )}\n    </Wrapper>\n  )\n}\n","import { AnyAction } from 'redux'\n\nimport { FileLoadProgress, HashType, Hash } from '../types'\n\nexport const SELECT_FILE = 'SELECT_FILE'\nexport const FILE_LOAD_PROGRESS = 'FILE_LOAD_PROGRESS'\nexport const CANCEL_FILE_LOAD = 'CANCEL_FILE_LOAD'\nexport const FILE_LOADED = 'FILE_LOADED'\nexport const SELECT_HASH_TYPE = 'SELECT_HASH_TYPE'\nexport const HASH_CALCULATED = 'HASH_CALCULATED'\n\n/* Action Types */\nexport interface SelectFileAction extends AnyAction {\n  type: typeof SELECT_FILE\n  payload: { file: File }\n}\n\nexport interface FileLoadProgressAction extends AnyAction {\n  type: typeof FILE_LOAD_PROGRESS\n  payload: { progress: FileLoadProgress }\n}\n\nexport interface CancelFileLoadAction extends AnyAction {\n  type: typeof CANCEL_FILE_LOAD\n}\n\nexport interface FileLoadedAction extends AnyAction {\n  type: typeof FILE_LOADED\n  payload: { arrayBuffer: ArrayBuffer }\n}\n\nexport interface SelectHashTypeAction extends AnyAction {\n  type: typeof SELECT_HASH_TYPE\n  payload: { hashType: HashType }\n}\n\nexport interface HashCalculatedAction extends AnyAction {\n  type: typeof HASH_CALCULATED\n  payload: { hash: Hash }\n}\n\n/* Action Creators */\nexport const selectFile = (file: File): SelectFileAction => ({\n  type: SELECT_FILE,\n  payload: { file }\n})\n\nexport const fileLoadProgress = (\n  progress: FileLoadProgress\n): FileLoadProgressAction => ({\n  type: FILE_LOAD_PROGRESS,\n  payload: { progress }\n})\n\nexport const cancelFileLoad = (): CancelFileLoadAction => ({\n  type: CANCEL_FILE_LOAD\n})\n\nexport const fileLoaded = (arrayBuffer: ArrayBuffer): FileLoadedAction => ({\n  type: FILE_LOADED,\n  payload: { arrayBuffer }\n})\n\nexport const selectHashType = (hashType: HashType): SelectHashTypeAction => ({\n  type: SELECT_HASH_TYPE,\n  payload: { hashType }\n})\n\nexport const hashCalculated = (hash: Hash): HashCalculatedAction => ({\n  type: HASH_CALCULATED,\n  payload: { hash }\n})\n\n/* Action Type Guards */\nexport const isSelectFileAction = (\n  action: AnyAction\n): action is SelectFileAction => action.type === SELECT_FILE\n\nexport const isFileLoadProgressAction = (\n  action: AnyAction\n): action is FileLoadProgressAction => action.type === FILE_LOAD_PROGRESS\n\nexport const isCancelFileLoadAction = (\n  action: AnyAction\n): action is CancelFileLoadAction => action.type === CANCEL_FILE_LOAD\n\nexport const isFileLoadedAction = (\n  action: AnyAction\n): action is FileLoadedAction => action.type === FILE_LOADED\n\nexport const isSelectHashTypeAction = (\n  action: AnyAction\n): action is SelectHashTypeAction => action.type === SELECT_HASH_TYPE\n\nexport const isHashCalculatedAction = (\n  action: AnyAction\n): action is HashCalculatedAction => action.type === HASH_CALCULATED\n","import { connect } from 'react-redux'\n\nimport { Shell } from '../../components'\nimport { selectFile, cancelFileLoad, selectHashType } from '../../actions'\n\nconst mapStateToProps = (state) => ({\n  file: state.file,\n  fileLoadProgress: state.fileLoadProgress,\n  arrayBuffer: state.arrayBuffer,\n  hashType: state.hashType,\n  isCalculatingHash: state.isCalculatingHash,\n  hash: state.hash\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleSelectFile: (file) => dispatch(selectFile(file)),\n  handleCancelFileLoad: () => dispatch(cancelFileLoad()),\n  handleSelectHashType: (hashType) => dispatch(selectHashType(hashType))\n})\n\nexport const ShellContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Shell)\n","import { AnyAction } from 'redux'\n\nimport * as Actions from '../actions'\nimport { FileLoadProgress, HashType, Hash } from '../types'\n\ninterface State {\n  file: File | null\n  fileLoadProgress: FileLoadProgress | null\n  arrayBuffer: ArrayBuffer | null\n  hashType: HashType | null\n  isCalculatingHash: boolean\n  hash: Hash | null\n}\n\nconst initialState: State = {\n  file: null,\n  fileLoadProgress: null,\n  arrayBuffer: null,\n  hashType: null,\n  isCalculatingHash: false,\n  hash: null\n}\n\nconst selectFile = (state: State, action: Actions.SelectFileAction): State => ({\n  ...state,\n  file: action.payload.file,\n  arrayBuffer: initialState.arrayBuffer,\n  hash: initialState.hash\n})\n\nconst fileLoadProgress = (\n  state: State,\n  action: Actions.FileLoadProgressAction\n): State => ({\n  ...state,\n  fileLoadProgress: action.payload.progress\n})\n\nconst cancelFileLoad = (state: State): State => ({\n  ...state,\n  file: initialState.file,\n  fileLoadProgress: initialState.fileLoadProgress\n})\n\nconst fileLoaded = (state: State, action: Actions.FileLoadedAction): State => ({\n  ...state,\n  arrayBuffer: action.payload.arrayBuffer,\n  fileLoadProgress: initialState.fileLoadProgress,\n  isCalculatingHash: Boolean(state.hashType)\n})\n\nconst selectHashType = (\n  state: State,\n  action: Actions.SelectHashTypeAction\n): State => ({\n  ...state,\n  hashType: action.payload.hashType,\n  hash: initialState.hash,\n  isCalculatingHash: Boolean(state.arrayBuffer)\n})\n\nconst hashCalculated = (\n  state: State,\n  action: Actions.HashCalculatedAction\n): State => ({\n  ...state,\n  isCalculatingHash: initialState.isCalculatingHash,\n  hash: action.payload.hash\n})\n\nexport const reducer = (\n  state: State = initialState,\n  action: AnyAction\n): State => {\n  if (Actions.isSelectFileAction(action)) {\n    return selectFile(state, action)\n  }\n  if (Actions.isFileLoadProgressAction(action)) {\n    return fileLoadProgress(state, action)\n  }\n  if (Actions.isCancelFileLoadAction(action)) {\n    return cancelFileLoad(state)\n  }\n  if (Actions.isFileLoadedAction(action)) {\n    return fileLoaded(state, action)\n  }\n  if (Actions.isSelectHashTypeAction(action)) {\n    return selectHashType(state, action)\n  }\n  if (Actions.isHashCalculatedAction(action)) {\n    return hashCalculated(state, action)\n  }\n\n  return state\n}\n","import { takeEvery, call } from 'redux-saga/effects'\n\nimport { SELECT_FILE, SELECT_HASH_TYPE } from '../actions'\nimport { getArrayBuffer, calculateHash } from '.'\n\nfunction* processFile({ payload: { file } }) {\n  yield call(getArrayBuffer, file)\n  yield call(calculateHash)\n}\n\nfunction* processHashType() {\n  yield call(calculateHash)\n}\n\nexport const saga = function* () {\n  yield takeEvery(SELECT_FILE, processFile)\n  yield takeEvery(SELECT_HASH_TYPE, processHashType)\n}\n","import { eventChannel, END } from 'redux-saga'\nimport { take, put, call, race } from 'redux-saga/effects'\n\nimport { fileLoaded, fileLoadProgress } from '../actions'\nimport { CANCEL_FILE_LOAD } from '../actions'\n\nconst createFileReadChannel = (file) => {\n  return eventChannel((emitter) => {\n    let reader = new FileReader()\n\n    const onLoad = () => {\n      emitter({ arrayBuffer: reader.result })\n      emitter(END)\n    }\n    const onProgress = (e) => {\n      emitter({ progress: Math.round((e.loaded / e.total) * 100) })\n    }\n    const onError = (error) => {\n      emitter({ error })\n      emitter(END)\n    }\n\n    reader.onload = onLoad\n    reader.onprogress = onProgress\n    reader.onerror = onError\n\n    reader.readAsArrayBuffer(file)\n\n    const unsubscribe = () => {\n      if (reader.readyState === 1) {\n        reader.abort()\n      }\n      reader = null\n    }\n    return unsubscribe\n  })\n}\n\nexport const getArrayBuffer = function* (file) {\n  const fileReadChannel = yield call(createFileReadChannel, file)\n  try {\n    while (true) {\n      const { channelOutput, cancelFileLoad } = yield race({\n        channelOutput: take(fileReadChannel),\n        cancelFileLoad: take(CANCEL_FILE_LOAD)\n      })\n      if (channelOutput) {\n        const { progress, arrayBuffer, error } = channelOutput\n        if (arrayBuffer) {\n          yield put(fileLoaded(arrayBuffer))\n          return\n        }\n        if (error) {\n          console.error('Error during file read operation: ', error)\n          return\n        }\n        yield put(fileLoadProgress(progress))\n      } else if (cancelFileLoad) {\n        fileReadChannel.close()\n      }\n    }\n  } finally {\n    fileReadChannel.close()\n  }\n}\n","import { put, call, select } from 'redux-saga/effects'\n\nimport { hashCalculated } from '../actions'\n\nconst getHash = async ({ arrayBuffer, hashType }) => {\n  if (arrayBuffer && hashType) {\n    const hashBuffer = await crypto.subtle.digest(hashType, arrayBuffer)\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\n    const hashHex = hashArray\n      .map((b) => ('00' + b.toString(16)).slice(-2))\n      .join('')\n    return hashHex\n  }\n  return ''\n}\n\nconst getArrayBuffer = (state) => state.arrayBuffer\nconst getHashType = (state) => state.hashType\n\nexport const calculateHash = function* () {\n  const arrayBuffer = yield select(getArrayBuffer)\n  const hashType = yield select(getHashType)\n  const hash = yield call(getHash, { arrayBuffer, hashType })\n  yield put(hashCalculated(hash))\n}\n","export default __webpack_public_path__ + \"static/media/github.66378707.svg\";","import { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport styled from 'styled-components'\n\nimport { ShellContainer } from './containers'\nimport { reducer } from './reducers'\nimport { saga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  max-width: 64rem;\n  height: 100vh;\n  margin: 0 auto;\n`\n\nconst Header = styled.header`\n  text-align: center;\n`\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`\n\nconst Footer = styled.footer`\n  margin: 2rem;\n`\n\nexport const App = () => (\n  <Main>\n    <Header>\n      <h1>File Hash Verifier</h1>\n    </Header>\n    <Section>\n      <article>\n        <Provider store={store}>\n          <ShellContainer />\n        </Provider>\n      </article>\n    </Section>\n    <Footer>\n      <a href='https://github.com/joelgeorgev/file-hash-verifier'>\n        <img src={github} alt='Go to GitHub repository page' />\n      </a>\n    </Footer>\n  </Main>\n)\n","export default __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.96b15882.woff2\";","export default __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.74ddb2b0.woff\";","import ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\n\nimport { App } from './App'\nimport woff2 from './fonts/source-sans-pro-v11-latin-regular.woff2'\nimport woff from './fonts/source-sans-pro-v11-latin-regular.woff'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n    overscroll-behavior-y: none;\n  }\n\n  /* source-sans-pro-regular - latin */\n  @font-face {\n    font-family: 'Source Sans Pro';\n    font-style: normal;\n    font-weight: 400;\n    font-display: optional;\n    src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'),\n        url(${woff2}) format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url(${woff}) format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n`\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}