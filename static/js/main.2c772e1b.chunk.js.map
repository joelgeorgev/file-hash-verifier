{"version":3,"sources":["assets/clippy.svg","assets/success.svg","assets/fail.svg","assets/github.svg","components/file-details.js","components/file-hash.js","components/file-loader.js","components/file-picker.js","components/hash-loader.js","components/hash-selector.js","components/hash-verifier.js","actions/index.js","constants/ActionTypes.js","containers/shell-container.js","components/shell.js","reducers/index.js","reducers/file.js","reducers/arrayBuffer.js","reducers/hashType.js","reducers/progress.js","reducers/loading.js","reducers/hash.js","sagas/saga.js","sagas/getArrayBuffer.js","sagas/selectors.js","sagas/calculateHash.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","__webpack_require__","p","FileDetails","_ref","file","name","size","react_default","a","createElement","className","FileHash","hash","ref","useRef","useEffect","element","current","clipboard","Clipboard","destroy","type","id","value","readOnly","data-clipboard-target","src","clippy","alt","FileLoader","progress","cancelFileRead","onClick","FilePicker","disabled","onChange","onDragOver","e","preventDefault","onDragLeave","onDrop","htmlFor","multiple","HashLoader","HashSelector","hashType","checked","HashVerifier","_useState","useState","_useState2","Object","slicedToArray","verify","setVerify","_useState3","_useState4","text","setText","_useState5","_useState6","match","setMatch","target","inputText","replace","toLowerCase","success","fail","saveFile","saveArrayBuffer","arrayBuffer","saveHashType","saveProgress","saveLoading","loading","saveHash","ShellContainer","connect","state","dispatch","setFile","files","dataTransfer","length","setHashType","reading","file_picker_FilePicker","hash_selector_HashSelector","file_loader_FileLoader","Fragment","file_details_FileDetails","hash_loader_HashLoader","file_hash_FileHash","hash_verifier_HashVerifier","rootReducer","combineReducers","arguments","undefined","action","processFile","processHashType","regenerator_default","wrap","_context","prev","next","put","call","getArrayBuffer","calculateHash","stop","_marked","_context2","_marked2","saga","mark","_context3","takeEvery","createFileReadChannel","eventChannel","emitter","reader","FileReader","onload","result","END","onprogress","Math","round","loaded","total","onerror","error","readAsArrayBuffer","readyState","abort","fileReadChannel","channelOutput","sent","race","take","abrupt","console","close","finish","arrayBufferSelector","hashTypeSelector","getHash","_ref2","asyncToGenerator","_callee","hashBuffer","hashArray","hashHex","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","slice","join","_x","apply","this","select","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","role","es","href","github","document","getElementById","navigator","window","addEventListener","swUrl","concat","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch"],"mappings":"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","file":"static/js/main.2c772e1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clippy.1e918ea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.4f20b95a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fail.1e98e874.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.dc6635a4.svg\";","import React from 'react'\n\nexport const FileDetails = ({ file }) => {\n  const { name, size } = file\n\n  return (\n    <div className='mt4'>\n      <div>\n        <label className='b'>Name: </label>\n        <label>{name}</label>\n      </div>\n      <div>\n        <label className='b'>Size: </label>\n        <label>{size} bytes</label>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useRef } from 'react'\nimport Clipboard from 'clipboard'\n\nimport clippy from '../assets/clippy.svg'\n\nexport const FileHash = ({ hash }) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    const { current: element } = ref\n    const clipboard = new Clipboard(element)\n    return () => clipboard.destroy()\n  }, [])\n\n  return (\n    <div className='mt4'>\n      <label className='b'>Hash:</label>\n      <div className='flex h2'>\n        <input type='text' id='hash' value={hash} readOnly\n          className='w-100 ph1 bt br-0 bb bl b--light-silver' />\n        <button ref={ref} data-clipboard-target='#hash'\n          className='bg-transparent ba b--light-silver pointer'>\n          <img src={clippy} alt='Copy to clipboard' className='w1' />\n        </button>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport const FileLoader = ({ progress, cancelFileRead }) => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <div>\n        <label>Loading file: {progress}%</label>\n        <button className='ml2' onClick={cancelFileRead}>Cancel</button>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport const FilePicker = ({ disabled, onChange }) => {\n  const onDragOver = (e) => e.preventDefault()\n\n  const onDragLeave = (e) => e.preventDefault()\n\n  const onDrop = (e) => {\n    e.preventDefault()\n    if (!disabled) {\n      onChange(e)\n    }\n  }\n\n  return (\n    <div className='flex flex-column justify-center h4 ba b--dashed b--light-silver'\n      onDragOver={onDragOver} onDragLeave={onDragLeave} onDrop={onDrop}>\n      <label htmlFor='file-picker'\n        className='self-center pointer b'>Drop your file here or click to pick one.</label>\n      <input type='file' id='file-picker' multiple={false} className='dn' onChange={onChange}\n        disabled={disabled} />\n    </div>\n  )\n}","import React from 'react'\n\nexport const HashLoader = () => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <label>Calculating Hash...</label>\n    </div>\n  )\n}","import React from 'react'\n\nexport const HashSelector = ({ hashType, disabled, onChange }) => {\n  return (\n    <div className='flex justify-center mt4 b'>\n      <label>\n        <input type='radio' name='hash-type' value='sha-1' checked={'sha-1' === hashType}\n          className='mh3' onChange={onChange} disabled={disabled} />SHA-1\n      </label>\n      <label>\n        <input type='radio' name='hash-type' value='sha-256' checked={'sha-256' === hashType}\n          className='mh3' onChange={onChange} disabled={disabled} />SHA-256\n      </label>\n      <label>\n        <input type='radio' name='hash-type' value='sha-384' checked={'sha-384' === hashType}\n          className='mh3' onChange={onChange} disabled={disabled} />SHA-384\n      </label>\n      <label>\n        <input type='radio' name='hash-type' value='sha-512' checked={'sha-512' === hashType}\n          className='mh3' onChange={onChange} disabled={disabled} />SHA-512\n      </label>\n    </div>\n  )\n}","import React, { useState } from 'react'\n\nimport success from '../assets/success.svg'\nimport fail from '../assets/fail.svg'\n\nexport const HashVerifier = ({ hash }) => {\n  const [verify, setVerify] = useState(false)\n  const [text, setText] = useState('')\n  const [match, setMatch] = useState(false)\n\n  const toggleVerify = (e) => setVerify(e.target.checked)\n\n  const verifyHash = (e) => {\n    const inputText = e.target.value\n    setText(inputText)\n    setMatch(hash === inputText.replace(/ /g, '').toLowerCase())\n  }\n\n  return (\n    <div className='flex flex-column mt4'>\n      <div>\n        <input type='checkbox' checked={verify} className='pointer'\n          onChange={toggleVerify} />\n        <label className='ml2 b'>Compare with:</label>\n      </div>\n      {verify &&\n        <div className='flex h2'>\n          <input type='text' value={text}\n            className='w-100 ph1 bt br-0 bb bl b--light-silver'\n            onChange={verifyHash} />\n          <button className='bg-transparent ba b--light-silver'>\n            <img src={match ? success : fail}\n              alt={match ? 'Success' : 'Fail'} className='w1' />\n          </button>\n        </div>}\n    </div>\n  )\n}","import {\n  SET_FILE, SET_HASH_TYPE, CANCEL_FILE_READ, SAVE_FILE,\n  SAVE_ARRAYBUFFER, SAVE_HASH_TYPE, SAVE_PROGRESS, SAVE_LOADING,\n  SAVE_HASH\n}\n  from '../constants/ActionTypes'\n\n// UI actions\nexport const setFile = (file) => { return { type: SET_FILE, file } }\nexport const setHashType = (hashType) => { return { type: SET_HASH_TYPE, hashType } }\nexport const cancelFileRead = () => { return { type: CANCEL_FILE_READ } }\n\n// Saga actions\nexport const saveFile = (file) => { return { type: SAVE_FILE, file } }\nexport const saveArrayBuffer = (arrayBuffer) => { return { type: SAVE_ARRAYBUFFER, arrayBuffer } }\nexport const saveHashType = (hashType) => { return { type: SAVE_HASH_TYPE, hashType } }\nexport const saveProgress = (progress) => { return { type: SAVE_PROGRESS, progress } }\nexport const saveLoading = (loading) => { return { type: SAVE_LOADING, loading } }\nexport const saveHash = (hash) => { return { type: SAVE_HASH, hash } }","// UI actions\nexport const SET_FILE = 'SET_FILE'\nexport const SET_HASH_TYPE = 'SET_HASH_TYPE'\nexport const CANCEL_FILE_READ = 'CANCEL_FILE_READ'\n\n// Saga actions\nexport const SAVE_FILE = 'SAVE_FILE'\nexport const SAVE_ARRAYBUFFER = 'SAVE_ARRAYBUFFER'\nexport const SAVE_HASH_TYPE = 'SAVE_HASH_TYPE'\nexport const SAVE_PROGRESS = 'SAVE_PROGRESS'\nexport const SAVE_LOADING = 'SAVE_LOADING'\nexport const SAVE_HASH = 'SAVE_HASH'","import { connect } from 'react-redux'\n\nimport { Shell } from '../components'\nimport { setFile, setHashType, cancelFileRead } from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    file: state.file,\n    arrayBuffer: state.arrayBuffer,\n    hashType: state.hashType,\n    progress: state.progress,\n    loading: state.loading,\n    hash: state.hash\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFile: (e) => {\n      const files = e.dataTransfer && e.dataTransfer.files ? e.dataTransfer.files : e.target.files\n      if (files.length) {\n        dispatch(setFile(files[0]))\n      }\n      e.target.value = null\n    },\n    setHashType: (e) => dispatch(setHashType(e.target.value)),\n    cancelFileRead: () => dispatch(cancelFileRead())\n  }\n}\n\nexport const ShellContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Shell)","import React from 'react'\n\nimport {\n  FilePicker, HashSelector, FileLoader, FileDetails,\n  HashLoader, FileHash, HashVerifier\n} from '.'\n\nexport const Shell = ({ file, arrayBuffer, hashType, progress,\n  loading, hash, setFile, setHashType, cancelFileRead }) => {\n  const reading = progress !== 100 && progress !== -1\n  const disabled = reading || loading\n\n  return (\n    <div className='flex flex-column w-80 center'>\n      <div className='flex flex-auto flex-column'>\n        <FilePicker onChange={setFile} disabled={disabled} />\n        <HashSelector hashType={hashType} onChange={setHashType} disabled={disabled} />\n        {reading && <FileLoader progress={progress} cancelFileRead={cancelFileRead} />}\n        {arrayBuffer &&\n          <React.Fragment>\n            <FileDetails file={file} />\n            {loading && <HashLoader />}\n            {hash &&\n              <div>\n                <FileHash hash={hash} />\n                <HashVerifier hash={hash} />\n              </div>}\n          </React.Fragment>\n        }\n      </div>\n    </div>\n  )\n}","import { combineReducers } from 'redux'\n\nimport { file } from './file'\nimport { arrayBuffer } from './arrayBuffer'\nimport { hashType } from './hashType'\nimport { progress } from './progress'\nimport { loading } from './loading'\nimport { hash } from './hash'\n\nexport const rootReducer = combineReducers({\n  file,\n  arrayBuffer,\n  hashType,\n  progress,\n  loading,\n  hash\n})","import { SAVE_FILE } from '../constants/ActionTypes'\n\nexport const file = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_FILE:\n      return action.file\n    default:\n      return state\n  }\n}","import { SAVE_ARRAYBUFFER } from '../constants/ActionTypes'\n\nexport const arrayBuffer = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_ARRAYBUFFER:\n      return action.arrayBuffer\n    default:\n      return state\n  }\n}","import { SAVE_HASH_TYPE } from '../constants/ActionTypes'\n\nexport const hashType = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH_TYPE:\n      return action.hashType\n    default:\n      return state\n  }\n}","import { SAVE_PROGRESS } from '../constants/ActionTypes'\n\nexport const progress = (state = 100, action) => {\n  switch (action.type) {\n    case SAVE_PROGRESS:\n      return action.progress\n    default:\n      return state\n  }\n}","import { SAVE_LOADING } from '../constants/ActionTypes'\n\nexport const loading = (state = false, action) => {\n  switch (action.type) {\n    case SAVE_LOADING:\n      return action.loading\n    default:\n      return state\n  }\n}","import { SAVE_HASH } from '../constants/ActionTypes'\n\nexport const hash = (state = '', action) => {\n  switch (action.type) {\n    case SAVE_HASH:\n      return action.hash\n    default:\n      return state\n  }\n}","import { takeEvery, put, call } from 'redux-saga/effects'\n\nimport { saveFile, saveHashType } from '../actions'\nimport { SET_FILE, SET_HASH_TYPE } from '../constants/ActionTypes'\nimport { getArrayBuffer, calculateHash } from '.'\n\nfunction* processFile(action) {\n  const { file } = action\n  yield put(saveFile(file))\n  yield call(getArrayBuffer, file)\n  yield call(calculateHash)\n}\n\nfunction* processHashType(action) {\n  const { hashType } = action\n  yield put(saveHashType(hashType))\n  yield call(calculateHash)\n}\n\nexport const saga = function* () {\n  yield takeEvery(SET_FILE, processFile)\n  yield takeEvery(SET_HASH_TYPE, processHashType)\n}","import { eventChannel, END } from 'redux-saga'\nimport { take, put, call, race } from 'redux-saga/effects'\n\nimport { saveFile, saveArrayBuffer, saveProgress } from '../actions'\nimport { CANCEL_FILE_READ } from '../constants/ActionTypes'\n\nconst createFileReadChannel = (file) => {\n  return eventChannel((emitter) => {\n    let reader = new FileReader()\n\n    const onLoad = () => { emitter({ arrayBuffer: reader.result }); emitter(END) }\n    const onProgress = (e) => { emitter({ progress: Math.round((e.loaded / e.total) * 100) }) }\n    const onError = (error) => { emitter({ error }); emitter(END) }\n\n    reader.onload = onLoad\n    reader.onprogress = onProgress\n    reader.onerror = onError\n\n    reader.readAsArrayBuffer(file)\n\n    const unsubscribe = () => {\n      if (reader.readyState === 1) {\n        reader.abort()\n      }\n      reader = null\n    }\n    return unsubscribe\n  })\n}\n\nexport const getArrayBuffer = function* (file) {\n  yield put(saveArrayBuffer(null))\n  const fileReadChannel = yield call(createFileReadChannel, file)\n  try {\n    while (true) {\n      const { channelOutput, cancelFileRead } = yield race({\n        channelOutput: take(fileReadChannel),\n        cancelFileRead: take(CANCEL_FILE_READ)\n      })\n      if (channelOutput) {\n        const { progress, arrayBuffer, error } = channelOutput\n        if (arrayBuffer) {\n          yield put(saveArrayBuffer(arrayBuffer))\n          return\n        }\n        if (error) {\n          console.error('Error during file read operation: ', error)\n          return\n        }\n        yield put(saveProgress(progress))\n      }\n      else if (cancelFileRead) {\n        fileReadChannel.close()\n        yield put(saveProgress(-1))\n        yield put(saveFile(null))\n      }\n    }\n  }\n  finally {\n    fileReadChannel.close()\n  }\n}","export const arrayBufferSelector = (state) => state.arrayBuffer\nexport const hashTypeSelector = (state) => state.hashType","import { put, call, select } from 'redux-saga/effects'\n\nimport { saveLoading, saveHash } from '../actions'\nimport { arrayBufferSelector, hashTypeSelector } from '.'\n\nconst getHash = async ({ arrayBuffer, hashType }) => {\n  if (arrayBuffer && hashType) {\n    const hashBuffer = await crypto.subtle.digest(hashType, arrayBuffer)\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\n    const hashHex = hashArray.map(b => ('00' + b.toString(16)).slice(-2)).join('')\n    return hashHex\n  }\n  return ''\n}\n\nexport const calculateHash = function* () {\n  yield put(saveHash(''))\n  yield put(saveLoading(true))\n  const arrayBuffer = yield select(arrayBufferSelector)\n  const hashType = yield select(hashTypeSelector)\n  const hash = yield call(getHash, { arrayBuffer, hashType })\n  yield put(saveHash(hash))\n  yield put(saveLoading(false))\n}","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport 'tachyons/css/tachyons.min.css'\n\nimport { ShellContainer } from './containers'\nimport { rootReducer } from './reducers'\nimport { saga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nexport const App = () => {\n  return (\n    <main role='main'>\n      <section className='flex flex-column w-80 mw8 vh-100 center pv5'>\n        <div className='flex flex-auto flex-column'>\n          <Provider store={store}>\n            <ShellContainer />\n          </Provider>\n        </div>\n        <div className='self-center'>\n          <a href='https://github.com/joelgeorgev/file-hash-verifier'>\n            <img src={github} alt='GitHub' />\n          </a>\n        </div>\n      </section>\n    </main>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}